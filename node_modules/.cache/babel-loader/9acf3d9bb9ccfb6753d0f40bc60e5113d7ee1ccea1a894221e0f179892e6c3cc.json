{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaski\\\\Desktop\\\\coding ninja\\\\react projects\\\\react-test-habit-tracking-app\\\\react habit tracker\\\\src\\\\components\\\\DayView.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { habitDone, habitNone, habitUnDone } from \"../redux/features/habitSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DayView = _ref => {\n  _s();\n  let {\n    day\n  } = _ref;\n  // get today date\n  const today = new Date();\n  // get day from today date\n  const todayDay = today.getDay();\n\n  // call use dispatch hook a variable call dispatch\n  const dispatch = useDispatch();\n\n  // get date details from providing date\n  const date = new Date(day.yyyy, day.mm, day.dd);\n\n  // function call after click done icon--------------\n  const markToDone = () => {\n    if (day.id > todayDay) {\n      alert(\"You cannot change your next days status\");\n      return;\n    }\n    // call habit done action from reducer\n    dispatch(habitDone(day.id));\n  };\n  // -------------------------------------------------\n\n  // function call after click undone icon------------\n  const markToUnDone = () => {\n    if (day.id > todayDay) {\n      alert(\"You cannot change your next days status\");\n      return;\n    }\n    // call habit undone action from reducer\n    dispatch(habitUnDone(day.id));\n  };\n  // --------------------------------------------------\n\n  // function call after click none icon--------------\n  const markToNone = () => {\n    if (day.id > todayDay) {\n      alert(\"You cannot change your next days status\");\n      return;\n    }\n    // call habit none action from reducer\n    dispatch(habitNone(day.id));\n  };\n  // -------------------------------------------------\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"day-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"text-center\",\n      children: day.day\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: [date.getDate(), \"/\", date.getMonth() + 1, \"/\", date.getFullYear()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: day.isDone === true ? \"fa-solid fa-circle-check circle-icon active\" : \"fa-solid fa-circle-check circle-icon\",\n      onClick: markToDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: day.isDone === false ? \"fa-solid fa-circle-xmark circle-icon active\" : \"fa-solid fa-circle-xmark circle-icon\",\n      onClick: markToUnDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: day.isDone === \"\" ? \"fa-solid fa-circle-minus circle-icon active\" : \"fa-solid fa-circle-minus circle-icon\",\n      onClick: markToNone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(DayView, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = DayView;\nexport default DayView;\nvar _c;\n$RefreshReg$(_c, \"DayView\");","map":{"version":3,"names":["React","useDispatch","habitDone","habitNone","habitUnDone","DayView","day","today","Date","todayDay","getDay","dispatch","date","yyyy","mm","dd","markToDone","id","alert","markToUnDone","markToNone","getDate","getMonth","getFullYear","isDone"],"sources":["C:/Users/jaski/Desktop/coding ninja/react projects/react-test-habit-tracking-app/react habit tracker/src/components/DayView.js"],"sourcesContent":["import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { habitDone, habitNone, habitUnDone } from \"../redux/features/habitSlice\";\r\n\r\nconst DayView = ({day}) => {\r\n  // get today date\r\n  const today=new Date();\r\n  // get day from today date\r\n  const todayDay=today.getDay();\r\n\r\n  // call use dispatch hook a variable call dispatch\r\n  const dispatch=useDispatch();\r\n\r\n  // get date details from providing date\r\n  const date=new Date(day.yyyy,day.mm,day.dd);\r\n\r\n  // function call after click done icon--------------\r\n  const markToDone=()=>{\r\n    if(day.id>todayDay){\r\n      alert(\"You cannot change your next days status\")\r\n      return;\r\n    }\r\n    // call habit done action from reducer\r\n    dispatch(habitDone(day.id));\r\n  }\r\n  // -------------------------------------------------\r\n\r\n  // function call after click undone icon------------\r\n  const markToUnDone=()=>{\r\n    if(day.id>todayDay){\r\n      alert(\"You cannot change your next days status\")\r\n      return;\r\n    }\r\n    // call habit undone action from reducer\r\n    dispatch(habitUnDone(day.id))\r\n  }\r\n  // --------------------------------------------------\r\n\r\n  // function call after click none icon--------------\r\n  const markToNone=()=>{\r\n    if(day.id>todayDay){\r\n      alert(\"You cannot change your next days status\")\r\n      return;\r\n    }\r\n    // call habit none action from reducer\r\n    dispatch(habitNone(day.id));\r\n  }\r\n  // -------------------------------------------------\r\n\r\n\r\n  return (\r\n    <div className=\"day-container\">\r\n      <h5 className=\"text-center\">{day.day}</h5>\r\n      <p className=\"text-center\">{date.getDate()}/{date.getMonth()+1}/{date.getFullYear()}</p>\r\n      <i className={day.isDone===true?\"fa-solid fa-circle-check circle-icon active\":\"fa-solid fa-circle-check circle-icon\"} onClick={markToDone}></i>\r\n      <i className={day.isDone===false?\"fa-solid fa-circle-xmark circle-icon active\":\"fa-solid fa-circle-xmark circle-icon\"} onClick={markToUnDone}></i>\r\n      <i className={day.isDone===\"\"?\"fa-solid fa-circle-minus circle-icon active\":\"fa-solid fa-circle-minus circle-icon\"} onClick={markToNone}></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayView;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,EAAEC,SAAS,EAAEC,WAAW,QAAQ,8BAA8B;AAAC;AAEjF,MAAMC,OAAO,GAAG,QAAW;EAAA;EAAA,IAAV;IAACC;EAAG,CAAC;EACpB;EACA,MAAMC,KAAK,GAAC,IAAIC,IAAI,EAAE;EACtB;EACA,MAAMC,QAAQ,GAACF,KAAK,CAACG,MAAM,EAAE;;EAE7B;EACA,MAAMC,QAAQ,GAACV,WAAW,EAAE;;EAE5B;EACA,MAAMW,IAAI,GAAC,IAAIJ,IAAI,CAACF,GAAG,CAACO,IAAI,EAACP,GAAG,CAACQ,EAAE,EAACR,GAAG,CAACS,EAAE,CAAC;;EAE3C;EACA,MAAMC,UAAU,GAAC,MAAI;IACnB,IAAGV,GAAG,CAACW,EAAE,GAACR,QAAQ,EAAC;MACjBS,KAAK,CAAC,yCAAyC,CAAC;MAChD;IACF;IACA;IACAP,QAAQ,CAACT,SAAS,CAACI,GAAG,CAACW,EAAE,CAAC,CAAC;EAC7B,CAAC;EACD;;EAEA;EACA,MAAME,YAAY,GAAC,MAAI;IACrB,IAAGb,GAAG,CAACW,EAAE,GAACR,QAAQ,EAAC;MACjBS,KAAK,CAAC,yCAAyC,CAAC;MAChD;IACF;IACA;IACAP,QAAQ,CAACP,WAAW,CAACE,GAAG,CAACW,EAAE,CAAC,CAAC;EAC/B,CAAC;EACD;;EAEA;EACA,MAAMG,UAAU,GAAC,MAAI;IACnB,IAAGd,GAAG,CAACW,EAAE,GAACR,QAAQ,EAAC;MACjBS,KAAK,CAAC,yCAAyC,CAAC;MAChD;IACF;IACA;IACAP,QAAQ,CAACR,SAAS,CAACG,GAAG,CAACW,EAAE,CAAC,CAAC;EAC7B,CAAC;EACD;;EAGA,oBACE;IAAK,SAAS,EAAC,eAAe;IAAA,wBAC5B;MAAI,SAAS,EAAC,aAAa;MAAA,UAAEX,GAAG,CAACA;IAAG;MAAA;MAAA;MAAA;IAAA,QAAM,eAC1C;MAAG,SAAS,EAAC,aAAa;MAAA,WAAEM,IAAI,CAACS,OAAO,EAAE,EAAC,GAAC,EAACT,IAAI,CAACU,QAAQ,EAAE,GAAC,CAAC,EAAC,GAAC,EAACV,IAAI,CAACW,WAAW,EAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACxF;MAAG,SAAS,EAAEjB,GAAG,CAACkB,MAAM,KAAG,IAAI,GAAC,6CAA6C,GAAC,sCAAuC;MAAC,OAAO,EAAER;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK,eAC/I;MAAG,SAAS,EAAEV,GAAG,CAACkB,MAAM,KAAG,KAAK,GAAC,6CAA6C,GAAC,sCAAuC;MAAC,OAAO,EAAEL;IAAa;MAAA;MAAA;MAAA;IAAA,QAAK,eAClJ;MAAG,SAAS,EAAEb,GAAG,CAACkB,MAAM,KAAG,EAAE,GAAC,6CAA6C,GAAC,sCAAuC;MAAC,OAAO,EAAEJ;IAAW;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACzI;AAEV,CAAC;AAAC,GAvDIf,OAAO;EAAA,QAOIJ,WAAW;AAAA;AAAA,KAPtBI,OAAO;AAyDb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}